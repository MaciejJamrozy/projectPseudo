# Generated from Pseudo.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,50,395,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,
        1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,
        11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,
        16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,
        18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,
        24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,
        26,5,26,217,8,26,10,26,12,26,220,9,26,1,26,1,26,1,26,1,26,5,26,226,
        8,26,10,26,12,26,229,9,26,1,26,3,26,232,8,26,1,27,1,27,1,27,1,28,
        4,28,238,8,28,11,28,12,28,239,1,29,4,29,243,8,29,11,29,12,29,244,
        1,29,1,29,4,29,249,8,29,11,29,12,29,250,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,3,30,262,8,30,1,31,4,31,265,8,31,11,31,12,31,
        266,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,
        1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,3,37,295,8,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,3,38,310,8,38,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,3,39,320,8,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,3,40,331,8,40,1,41,1,41,1,41,1,41,1,41,3,41,338,8,41,1,42,1,
        42,1,42,1,42,3,42,344,8,42,1,43,1,43,1,43,1,43,3,43,350,8,43,1,44,
        1,44,1,44,1,44,1,44,3,44,357,8,44,1,45,1,45,1,45,1,45,1,46,1,46,
        1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
        1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
        5,50,391,8,50,10,50,12,50,394,9,50,0,0,51,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,0,
        57,28,59,29,61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,
        79,39,81,40,83,41,85,42,87,43,89,44,91,45,93,46,95,47,97,48,99,49,
        101,50,1,0,7,2,0,34,34,92,92,2,0,39,39,92,92,7,0,34,34,39,39,92,
        92,98,98,110,110,114,114,116,116,1,0,48,57,3,0,9,10,13,13,32,32,
        3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,415,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
        0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
        0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
        0,53,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,
        0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,
        0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,
        0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
        0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,1,103,1,0,0,
        0,3,105,1,0,0,0,5,111,1,0,0,0,7,117,1,0,0,0,9,119,1,0,0,0,11,121,
        1,0,0,0,13,123,1,0,0,0,15,126,1,0,0,0,17,129,1,0,0,0,19,132,1,0,
        0,0,21,135,1,0,0,0,23,137,1,0,0,0,25,142,1,0,0,0,27,146,1,0,0,0,
        29,151,1,0,0,0,31,157,1,0,0,0,33,162,1,0,0,0,35,166,1,0,0,0,37,175,
        1,0,0,0,39,179,1,0,0,0,41,183,1,0,0,0,43,186,1,0,0,0,45,193,1,0,
        0,0,47,195,1,0,0,0,49,201,1,0,0,0,51,206,1,0,0,0,53,231,1,0,0,0,
        55,233,1,0,0,0,57,237,1,0,0,0,59,242,1,0,0,0,61,261,1,0,0,0,63,264,
        1,0,0,0,65,270,1,0,0,0,67,272,1,0,0,0,69,274,1,0,0,0,71,276,1,0,
        0,0,73,278,1,0,0,0,75,294,1,0,0,0,77,309,1,0,0,0,79,319,1,0,0,0,
        81,330,1,0,0,0,83,337,1,0,0,0,85,343,1,0,0,0,87,349,1,0,0,0,89,356,
        1,0,0,0,91,358,1,0,0,0,93,362,1,0,0,0,95,368,1,0,0,0,97,375,1,0,
        0,0,99,383,1,0,0,0,101,388,1,0,0,0,103,104,5,59,0,0,104,2,1,0,0,
        0,105,106,5,112,0,0,106,107,5,114,0,0,107,108,5,105,0,0,108,109,
        5,110,0,0,109,110,5,116,0,0,110,4,1,0,0,0,111,112,5,115,0,0,112,
        113,5,104,0,0,113,114,5,111,0,0,114,115,5,117,0,0,115,116,5,116,
        0,0,116,6,1,0,0,0,117,118,5,40,0,0,118,8,1,0,0,0,119,120,5,41,0,
        0,120,10,1,0,0,0,121,122,5,61,0,0,122,12,1,0,0,0,123,124,5,105,0,
        0,124,125,5,115,0,0,125,14,1,0,0,0,126,127,5,60,0,0,127,128,5,60,
        0,0,128,16,1,0,0,0,129,130,5,60,0,0,130,131,5,45,0,0,131,18,1,0,
        0,0,132,133,5,105,0,0,133,134,5,102,0,0,134,20,1,0,0,0,135,136,5,
        58,0,0,136,22,1,0,0,0,137,138,5,101,0,0,138,139,5,108,0,0,139,140,
        5,115,0,0,140,141,5,101,0,0,141,24,1,0,0,0,142,143,5,101,0,0,143,
        144,5,110,0,0,144,145,5,100,0,0,145,26,1,0,0,0,146,147,5,116,0,0,
        147,148,5,104,0,0,148,149,5,101,0,0,149,150,5,110,0,0,150,28,1,0,
        0,0,151,152,5,119,0,0,152,153,5,104,0,0,153,154,5,105,0,0,154,155,
        5,108,0,0,155,156,5,101,0,0,156,30,1,0,0,0,157,158,5,108,0,0,158,
        159,5,111,0,0,159,160,5,111,0,0,160,161,5,112,0,0,161,32,1,0,0,0,
        162,163,5,102,0,0,163,164,5,111,0,0,164,165,5,114,0,0,165,34,1,0,
        0,0,166,167,5,102,0,0,167,168,5,117,0,0,168,169,5,110,0,0,169,170,
        5,99,0,0,170,171,5,116,0,0,171,172,5,105,0,0,172,173,5,111,0,0,173,
        174,5,110,0,0,174,36,1,0,0,0,175,176,5,102,0,0,176,177,5,117,0,0,
        177,178,5,110,0,0,178,38,1,0,0,0,179,180,5,100,0,0,180,181,5,101,
        0,0,181,182,5,102,0,0,182,40,1,0,0,0,183,184,5,45,0,0,184,185,5,
        62,0,0,185,42,1,0,0,0,186,187,5,114,0,0,187,188,5,101,0,0,188,189,
        5,116,0,0,189,190,5,117,0,0,190,191,5,114,0,0,191,192,5,110,0,0,
        192,44,1,0,0,0,193,194,5,44,0,0,194,46,1,0,0,0,195,196,5,105,0,0,
        196,197,5,110,0,0,197,198,5,112,0,0,198,199,5,117,0,0,199,200,5,
        116,0,0,200,48,1,0,0,0,201,202,5,115,0,0,202,203,5,99,0,0,203,204,
        5,97,0,0,204,205,5,110,0,0,205,50,1,0,0,0,206,207,5,108,0,0,207,
        208,5,105,0,0,208,209,5,115,0,0,209,210,5,116,0,0,210,211,5,101,
        0,0,211,212,5,110,0,0,212,52,1,0,0,0,213,218,5,34,0,0,214,217,3,
        55,27,0,215,217,8,0,0,0,216,214,1,0,0,0,216,215,1,0,0,0,217,220,
        1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,221,1,0,0,0,220,218,
        1,0,0,0,221,232,5,34,0,0,222,227,5,39,0,0,223,226,3,55,27,0,224,
        226,8,1,0,0,225,223,1,0,0,0,225,224,1,0,0,0,226,229,1,0,0,0,227,
        225,1,0,0,0,227,228,1,0,0,0,228,230,1,0,0,0,229,227,1,0,0,0,230,
        232,5,39,0,0,231,213,1,0,0,0,231,222,1,0,0,0,232,54,1,0,0,0,233,
        234,5,92,0,0,234,235,7,2,0,0,235,56,1,0,0,0,236,238,7,3,0,0,237,
        236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,
        58,1,0,0,0,241,243,7,3,0,0,242,241,1,0,0,0,243,244,1,0,0,0,244,242,
        1,0,0,0,244,245,1,0,0,0,245,246,1,0,0,0,246,248,5,46,0,0,247,249,
        7,3,0,0,248,247,1,0,0,0,249,250,1,0,0,0,250,248,1,0,0,0,250,251,
        1,0,0,0,251,60,1,0,0,0,252,253,5,116,0,0,253,254,5,114,0,0,254,255,
        5,117,0,0,255,262,5,101,0,0,256,257,5,102,0,0,257,258,5,97,0,0,258,
        259,5,108,0,0,259,260,5,115,0,0,260,262,5,101,0,0,261,252,1,0,0,
        0,261,256,1,0,0,0,262,62,1,0,0,0,263,265,7,4,0,0,264,263,1,0,0,0,
        265,266,1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,268,1,0,0,0,
        268,269,6,31,0,0,269,64,1,0,0,0,270,271,5,43,0,0,271,66,1,0,0,0,
        272,273,5,45,0,0,273,68,1,0,0,0,274,275,5,42,0,0,275,70,1,0,0,0,
        276,277,5,47,0,0,277,72,1,0,0,0,278,279,5,47,0,0,279,280,5,47,0,
        0,280,74,1,0,0,0,281,295,5,62,0,0,282,283,5,103,0,0,283,284,5,114,
        0,0,284,285,5,101,0,0,285,286,5,97,0,0,286,287,5,116,0,0,287,288,
        5,101,0,0,288,289,5,114,0,0,289,290,5,32,0,0,290,291,5,116,0,0,291,
        292,5,104,0,0,292,293,5,97,0,0,293,295,5,110,0,0,294,281,1,0,0,0,
        294,282,1,0,0,0,295,76,1,0,0,0,296,310,5,60,0,0,297,298,5,115,0,
        0,298,299,5,109,0,0,299,300,5,97,0,0,300,301,5,108,0,0,301,302,5,
        108,0,0,302,303,5,101,0,0,303,304,5,114,0,0,304,305,5,32,0,0,305,
        306,5,116,0,0,306,307,5,104,0,0,307,308,5,97,0,0,308,310,5,110,0,
        0,309,296,1,0,0,0,309,297,1,0,0,0,310,78,1,0,0,0,311,312,5,61,0,
        0,312,320,5,61,0,0,313,314,5,101,0,0,314,315,5,113,0,0,315,316,5,
        117,0,0,316,317,5,97,0,0,317,318,5,108,0,0,318,320,5,115,0,0,319,
        311,1,0,0,0,319,313,1,0,0,0,320,80,1,0,0,0,321,322,5,33,0,0,322,
        331,5,61,0,0,323,324,5,100,0,0,324,325,5,105,0,0,325,326,5,102,0,
        0,326,327,5,102,0,0,327,328,5,101,0,0,328,329,5,114,0,0,329,331,
        5,115,0,0,330,321,1,0,0,0,330,323,1,0,0,0,331,82,1,0,0,0,332,333,
        5,38,0,0,333,338,5,38,0,0,334,335,5,97,0,0,335,336,5,110,0,0,336,
        338,5,100,0,0,337,332,1,0,0,0,337,334,1,0,0,0,338,84,1,0,0,0,339,
        340,5,124,0,0,340,344,5,124,0,0,341,342,5,111,0,0,342,344,5,114,
        0,0,343,339,1,0,0,0,343,341,1,0,0,0,344,86,1,0,0,0,345,350,5,33,
        0,0,346,347,5,110,0,0,347,348,5,111,0,0,348,350,5,116,0,0,349,345,
        1,0,0,0,349,346,1,0,0,0,350,88,1,0,0,0,351,357,3,91,45,0,352,357,
        3,93,46,0,353,357,3,95,47,0,354,357,3,97,48,0,355,357,3,99,49,0,
        356,351,1,0,0,0,356,352,1,0,0,0,356,353,1,0,0,0,356,354,1,0,0,0,
        356,355,1,0,0,0,357,90,1,0,0,0,358,359,5,105,0,0,359,360,5,110,0,
        0,360,361,5,116,0,0,361,92,1,0,0,0,362,363,5,102,0,0,363,364,5,108,
        0,0,364,365,5,111,0,0,365,366,5,97,0,0,366,367,5,116,0,0,367,94,
        1,0,0,0,368,369,5,115,0,0,369,370,5,116,0,0,370,371,5,114,0,0,371,
        372,5,105,0,0,372,373,5,110,0,0,373,374,5,103,0,0,374,96,1,0,0,0,
        375,376,5,98,0,0,376,377,5,111,0,0,377,378,5,111,0,0,378,379,5,108,
        0,0,379,380,5,101,0,0,380,381,5,97,0,0,381,382,5,110,0,0,382,98,
        1,0,0,0,383,384,5,118,0,0,384,385,5,111,0,0,385,386,5,105,0,0,386,
        387,5,100,0,0,387,100,1,0,0,0,388,392,7,5,0,0,389,391,7,6,0,0,390,
        389,1,0,0,0,391,394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,
        102,1,0,0,0,394,392,1,0,0,0,20,0,216,218,225,227,231,239,244,250,
        261,266,294,309,319,330,337,343,349,356,392,1,6,0,0
    ]

class PseudoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    STRING = 27
    NUMBER = 28
    DOUBLE = 29
    BOOL = 30
    WS = 31
    PLUS = 32
    MINUS = 33
    MULT = 34
    DIV = 35
    INTDIV = 36
    GREATER = 37
    SMALLER = 38
    EQUAL = 39
    DIFFERENT = 40
    AND = 41
    OR = 42
    NOT = 43
    TYPE = 44
    TYPE_INT = 45
    TYPE_FLOAT = 46
    TYPE_STRING = 47
    TYPE_BOOL = 48
    TYPE_VOID = 49
    ID = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'print'", "'shout'", "'('", "')'", "'='", "'is'", "'<<'", 
            "'<-'", "'if'", "':'", "'else'", "'end'", "'then'", "'while'", 
            "'loop'", "'for'", "'function'", "'fun'", "'def'", "'->'", "'return'", 
            "','", "'input'", "'scan'", "'listen'", "'+'", "'-'", "'*'", 
            "'/'", "'//'", "'int'", "'float'", "'string'", "'boolean'", 
            "'void'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "DOUBLE", "BOOL", "WS", "PLUS", "MINUS", 
            "MULT", "DIV", "INTDIV", "GREATER", "SMALLER", "EQUAL", "DIFFERENT", 
            "AND", "OR", "NOT", "TYPE", "TYPE_INT", "TYPE_FLOAT", "TYPE_STRING", 
            "TYPE_BOOL", "TYPE_VOID", "ID" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "STRING", "ESC", "NUMBER", "DOUBLE", "BOOL", "WS", "PLUS", 
                  "MINUS", "MULT", "DIV", "INTDIV", "GREATER", "SMALLER", 
                  "EQUAL", "DIFFERENT", "AND", "OR", "NOT", "TYPE", "TYPE_INT", 
                  "TYPE_FLOAT", "TYPE_STRING", "TYPE_BOOL", "TYPE_VOID", 
                  "ID" ]

    grammarFileName = "Pseudo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


