# Generated from Pseudo.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,67,574,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,
        1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,
        1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,
        14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
        16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,
        21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
        23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,
        26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,
        30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
        34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,5,36,306,
        8,36,10,36,12,36,309,9,36,1,36,1,36,1,36,1,36,5,36,315,8,36,10,36,
        12,36,318,9,36,1,36,3,36,321,8,36,1,37,1,37,1,37,1,38,4,38,327,8,
        38,11,38,12,38,328,1,39,4,39,332,8,39,11,39,12,39,333,1,39,1,39,
        4,39,338,8,39,11,39,12,39,339,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,3,40,351,8,40,1,41,4,41,354,8,41,11,41,12,41,355,1,41,
        1,41,1,42,1,42,1,42,1,42,5,42,364,8,42,10,42,12,42,367,9,42,1,42,
        1,42,1,43,1,43,1,43,1,43,5,43,375,8,43,10,43,12,43,378,9,43,1,43,
        1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,
        1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,415,8,51,1,52,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,430,
        8,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,
        1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,455,
        8,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
        1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,3,54,480,
        8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,55,490,8,55,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,56,501,8,56,1,57,1,57,
        1,57,1,57,1,57,3,57,508,8,57,1,58,1,58,1,58,1,58,3,58,514,8,58,1,
        59,1,59,1,59,1,59,3,59,520,8,59,1,60,1,60,1,60,1,60,1,60,1,60,1,
        60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,3,61,536,8,61,1,62,1,62,1,
        62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,
        64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,
        66,1,66,1,67,1,67,5,67,570,8,67,10,67,12,67,573,9,67,1,376,0,68,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,0,77,38,79,39,81,40,83,41,85,42,87,43,89,44,91,45,
        93,46,95,47,97,48,99,49,101,50,103,51,105,52,107,53,109,54,111,55,
        113,56,115,57,117,58,119,59,121,60,123,61,125,62,127,63,129,64,131,
        65,133,66,135,67,1,0,8,2,0,34,34,92,92,2,0,39,39,92,92,7,0,34,34,
        39,39,92,92,98,98,110,110,114,114,116,116,1,0,48,57,3,0,9,10,13,
        13,32,32,2,0,10,10,13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
        95,95,97,122,598,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
        0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
        0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
        0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
        0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
        0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
        0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
        0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
        0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
        0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,
        119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
        0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,1,137,
        1,0,0,0,3,139,1,0,0,0,5,145,1,0,0,0,7,151,1,0,0,0,9,153,1,0,0,0,
        11,155,1,0,0,0,13,157,1,0,0,0,15,160,1,0,0,0,17,163,1,0,0,0,19,166,
        1,0,0,0,21,169,1,0,0,0,23,171,1,0,0,0,25,176,1,0,0,0,27,183,1,0,
        0,0,29,188,1,0,0,0,31,192,1,0,0,0,33,198,1,0,0,0,35,203,1,0,0,0,
        37,207,1,0,0,0,39,213,1,0,0,0,41,218,1,0,0,0,43,227,1,0,0,0,45,232,
        1,0,0,0,47,241,1,0,0,0,49,245,1,0,0,0,51,249,1,0,0,0,53,252,1,0,
        0,0,55,259,1,0,0,0,57,261,1,0,0,0,59,263,1,0,0,0,61,265,1,0,0,0,
        63,271,1,0,0,0,65,277,1,0,0,0,67,284,1,0,0,0,69,290,1,0,0,0,71,295,
        1,0,0,0,73,320,1,0,0,0,75,322,1,0,0,0,77,326,1,0,0,0,79,331,1,0,
        0,0,81,350,1,0,0,0,83,353,1,0,0,0,85,359,1,0,0,0,87,370,1,0,0,0,
        89,384,1,0,0,0,91,386,1,0,0,0,93,388,1,0,0,0,95,390,1,0,0,0,97,392,
        1,0,0,0,99,395,1,0,0,0,101,398,1,0,0,0,103,414,1,0,0,0,105,429,1,
        0,0,0,107,454,1,0,0,0,109,479,1,0,0,0,111,489,1,0,0,0,113,500,1,
        0,0,0,115,507,1,0,0,0,117,513,1,0,0,0,119,519,1,0,0,0,121,521,1,
        0,0,0,123,535,1,0,0,0,125,537,1,0,0,0,127,541,1,0,0,0,129,547,1,
        0,0,0,131,554,1,0,0,0,133,562,1,0,0,0,135,567,1,0,0,0,137,138,5,
        59,0,0,138,2,1,0,0,0,139,140,5,112,0,0,140,141,5,114,0,0,141,142,
        5,105,0,0,142,143,5,110,0,0,143,144,5,116,0,0,144,4,1,0,0,0,145,
        146,5,115,0,0,146,147,5,104,0,0,147,148,5,111,0,0,148,149,5,117,
        0,0,149,150,5,116,0,0,150,6,1,0,0,0,151,152,5,40,0,0,152,8,1,0,0,
        0,153,154,5,41,0,0,154,10,1,0,0,0,155,156,5,61,0,0,156,12,1,0,0,
        0,157,158,5,105,0,0,158,159,5,115,0,0,159,14,1,0,0,0,160,161,5,60,
        0,0,161,162,5,60,0,0,162,16,1,0,0,0,163,164,5,60,0,0,164,165,5,45,
        0,0,165,18,1,0,0,0,166,167,5,105,0,0,167,168,5,102,0,0,168,20,1,
        0,0,0,169,170,5,58,0,0,170,22,1,0,0,0,171,172,5,116,0,0,172,173,
        5,104,0,0,173,174,5,101,0,0,174,175,5,110,0,0,175,24,1,0,0,0,176,
        177,5,101,0,0,177,178,5,108,0,0,178,179,5,115,0,0,179,180,5,101,
        0,0,180,181,5,105,0,0,181,182,5,102,0,0,182,26,1,0,0,0,183,184,5,
        101,0,0,184,185,5,108,0,0,185,186,5,115,0,0,186,187,5,101,0,0,187,
        28,1,0,0,0,188,189,5,101,0,0,189,190,5,110,0,0,190,191,5,100,0,0,
        191,30,1,0,0,0,192,193,5,119,0,0,193,194,5,104,0,0,194,195,5,105,
        0,0,195,196,5,108,0,0,196,197,5,101,0,0,197,32,1,0,0,0,198,199,5,
        108,0,0,199,200,5,111,0,0,200,201,5,111,0,0,201,202,5,112,0,0,202,
        34,1,0,0,0,203,204,5,102,0,0,204,205,5,111,0,0,205,206,5,114,0,0,
        206,36,1,0,0,0,207,208,5,98,0,0,208,209,5,114,0,0,209,210,5,101,
        0,0,210,211,5,97,0,0,211,212,5,107,0,0,212,38,1,0,0,0,213,214,5,
        101,0,0,214,215,5,120,0,0,215,216,5,105,0,0,216,217,5,116,0,0,217,
        40,1,0,0,0,218,219,5,99,0,0,219,220,5,111,0,0,220,221,5,110,0,0,
        221,222,5,116,0,0,222,223,5,105,0,0,223,224,5,110,0,0,224,225,5,
        117,0,0,225,226,5,101,0,0,226,42,1,0,0,0,227,228,5,110,0,0,228,229,
        5,101,0,0,229,230,5,120,0,0,230,231,5,116,0,0,231,44,1,0,0,0,232,
        233,5,102,0,0,233,234,5,117,0,0,234,235,5,110,0,0,235,236,5,99,0,
        0,236,237,5,116,0,0,237,238,5,105,0,0,238,239,5,111,0,0,239,240,
        5,110,0,0,240,46,1,0,0,0,241,242,5,102,0,0,242,243,5,117,0,0,243,
        244,5,110,0,0,244,48,1,0,0,0,245,246,5,100,0,0,246,247,5,101,0,0,
        247,248,5,102,0,0,248,50,1,0,0,0,249,250,5,45,0,0,250,251,5,62,0,
        0,251,52,1,0,0,0,252,253,5,114,0,0,253,254,5,101,0,0,254,255,5,116,
        0,0,255,256,5,117,0,0,256,257,5,114,0,0,257,258,5,110,0,0,258,54,
        1,0,0,0,259,260,5,44,0,0,260,56,1,0,0,0,261,262,5,123,0,0,262,58,
        1,0,0,0,263,264,5,125,0,0,264,60,1,0,0,0,265,266,5,98,0,0,266,267,
        5,101,0,0,267,268,5,103,0,0,268,269,5,105,0,0,269,270,5,110,0,0,
        270,62,1,0,0,0,271,272,5,98,0,0,272,273,5,108,0,0,273,274,5,111,
        0,0,274,275,5,99,0,0,275,276,5,107,0,0,276,64,1,0,0,0,277,278,5,
        103,0,0,278,279,5,108,0,0,279,280,5,111,0,0,280,281,5,98,0,0,281,
        282,5,97,0,0,282,283,5,108,0,0,283,66,1,0,0,0,284,285,5,105,0,0,
        285,286,5,110,0,0,286,287,5,112,0,0,287,288,5,117,0,0,288,289,5,
        116,0,0,289,68,1,0,0,0,290,291,5,115,0,0,291,292,5,99,0,0,292,293,
        5,97,0,0,293,294,5,110,0,0,294,70,1,0,0,0,295,296,5,108,0,0,296,
        297,5,105,0,0,297,298,5,115,0,0,298,299,5,116,0,0,299,300,5,101,
        0,0,300,301,5,110,0,0,301,72,1,0,0,0,302,307,5,34,0,0,303,306,3,
        75,37,0,304,306,8,0,0,0,305,303,1,0,0,0,305,304,1,0,0,0,306,309,
        1,0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,310,1,0,0,0,309,307,
        1,0,0,0,310,321,5,34,0,0,311,316,5,39,0,0,312,315,3,75,37,0,313,
        315,8,1,0,0,314,312,1,0,0,0,314,313,1,0,0,0,315,318,1,0,0,0,316,
        314,1,0,0,0,316,317,1,0,0,0,317,319,1,0,0,0,318,316,1,0,0,0,319,
        321,5,39,0,0,320,302,1,0,0,0,320,311,1,0,0,0,321,74,1,0,0,0,322,
        323,5,92,0,0,323,324,7,2,0,0,324,76,1,0,0,0,325,327,7,3,0,0,326,
        325,1,0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,
        78,1,0,0,0,330,332,7,3,0,0,331,330,1,0,0,0,332,333,1,0,0,0,333,331,
        1,0,0,0,333,334,1,0,0,0,334,335,1,0,0,0,335,337,5,46,0,0,336,338,
        7,3,0,0,337,336,1,0,0,0,338,339,1,0,0,0,339,337,1,0,0,0,339,340,
        1,0,0,0,340,80,1,0,0,0,341,342,5,84,0,0,342,343,5,114,0,0,343,344,
        5,117,0,0,344,351,5,101,0,0,345,346,5,70,0,0,346,347,5,97,0,0,347,
        348,5,108,0,0,348,349,5,115,0,0,349,351,5,101,0,0,350,341,1,0,0,
        0,350,345,1,0,0,0,351,82,1,0,0,0,352,354,7,4,0,0,353,352,1,0,0,0,
        354,355,1,0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,357,1,0,0,0,
        357,358,6,41,0,0,358,84,1,0,0,0,359,360,5,47,0,0,360,361,5,47,0,
        0,361,365,1,0,0,0,362,364,8,5,0,0,363,362,1,0,0,0,364,367,1,0,0,
        0,365,363,1,0,0,0,365,366,1,0,0,0,366,368,1,0,0,0,367,365,1,0,0,
        0,368,369,6,42,0,0,369,86,1,0,0,0,370,371,5,47,0,0,371,372,5,42,
        0,0,372,376,1,0,0,0,373,375,9,0,0,0,374,373,1,0,0,0,375,378,1,0,
        0,0,376,377,1,0,0,0,376,374,1,0,0,0,377,379,1,0,0,0,378,376,1,0,
        0,0,379,380,5,42,0,0,380,381,5,47,0,0,381,382,1,0,0,0,382,383,6,
        43,0,0,383,88,1,0,0,0,384,385,5,43,0,0,385,90,1,0,0,0,386,387,5,
        45,0,0,387,92,1,0,0,0,388,389,5,42,0,0,389,94,1,0,0,0,390,391,5,
        47,0,0,391,96,1,0,0,0,392,393,5,47,0,0,393,394,5,35,0,0,394,98,1,
        0,0,0,395,396,5,43,0,0,396,397,5,43,0,0,397,100,1,0,0,0,398,399,
        5,45,0,0,399,400,5,45,0,0,400,102,1,0,0,0,401,415,5,62,0,0,402,403,
        5,103,0,0,403,404,5,114,0,0,404,405,5,101,0,0,405,406,5,97,0,0,406,
        407,5,116,0,0,407,408,5,101,0,0,408,409,5,114,0,0,409,410,5,32,0,
        0,410,411,5,116,0,0,411,412,5,104,0,0,412,413,5,97,0,0,413,415,5,
        110,0,0,414,401,1,0,0,0,414,402,1,0,0,0,415,104,1,0,0,0,416,430,
        5,60,0,0,417,418,5,115,0,0,418,419,5,109,0,0,419,420,5,97,0,0,420,
        421,5,108,0,0,421,422,5,108,0,0,422,423,5,101,0,0,423,424,5,114,
        0,0,424,425,5,32,0,0,425,426,5,116,0,0,426,427,5,104,0,0,427,428,
        5,97,0,0,428,430,5,110,0,0,429,416,1,0,0,0,429,417,1,0,0,0,430,106,
        1,0,0,0,431,432,5,62,0,0,432,455,5,61,0,0,433,434,5,103,0,0,434,
        435,5,114,0,0,435,436,5,101,0,0,436,437,5,97,0,0,437,438,5,116,0,
        0,438,439,5,101,0,0,439,440,5,114,0,0,440,441,5,32,0,0,441,442,5,
        111,0,0,442,443,5,114,0,0,443,444,5,32,0,0,444,445,5,101,0,0,445,
        446,5,113,0,0,446,447,5,117,0,0,447,448,5,97,0,0,448,449,5,108,0,
        0,449,450,5,32,0,0,450,451,5,116,0,0,451,452,5,104,0,0,452,453,5,
        97,0,0,453,455,5,110,0,0,454,431,1,0,0,0,454,433,1,0,0,0,455,108,
        1,0,0,0,456,457,5,60,0,0,457,480,5,61,0,0,458,459,5,115,0,0,459,
        460,5,109,0,0,460,461,5,97,0,0,461,462,5,108,0,0,462,463,5,108,0,
        0,463,464,5,101,0,0,464,465,5,114,0,0,465,466,5,32,0,0,466,467,5,
        111,0,0,467,468,5,114,0,0,468,469,5,32,0,0,469,470,5,101,0,0,470,
        471,5,113,0,0,471,472,5,117,0,0,472,473,5,97,0,0,473,474,5,108,0,
        0,474,475,5,32,0,0,475,476,5,116,0,0,476,477,5,104,0,0,477,478,5,
        97,0,0,478,480,5,110,0,0,479,456,1,0,0,0,479,458,1,0,0,0,480,110,
        1,0,0,0,481,482,5,61,0,0,482,490,5,61,0,0,483,484,5,101,0,0,484,
        485,5,113,0,0,485,486,5,117,0,0,486,487,5,97,0,0,487,488,5,108,0,
        0,488,490,5,115,0,0,489,481,1,0,0,0,489,483,1,0,0,0,490,112,1,0,
        0,0,491,492,5,33,0,0,492,501,5,61,0,0,493,494,5,100,0,0,494,495,
        5,105,0,0,495,496,5,102,0,0,496,497,5,102,0,0,497,498,5,101,0,0,
        498,499,5,114,0,0,499,501,5,115,0,0,500,491,1,0,0,0,500,493,1,0,
        0,0,501,114,1,0,0,0,502,503,5,38,0,0,503,508,5,38,0,0,504,505,5,
        97,0,0,505,506,5,110,0,0,506,508,5,100,0,0,507,502,1,0,0,0,507,504,
        1,0,0,0,508,116,1,0,0,0,509,510,5,124,0,0,510,514,5,124,0,0,511,
        512,5,111,0,0,512,514,5,114,0,0,513,509,1,0,0,0,513,511,1,0,0,0,
        514,118,1,0,0,0,515,520,5,33,0,0,516,517,5,110,0,0,517,518,5,111,
        0,0,518,520,5,116,0,0,519,515,1,0,0,0,519,516,1,0,0,0,520,120,1,
        0,0,0,521,522,5,112,0,0,522,523,5,97,0,0,523,524,5,114,0,0,524,525,
        5,101,0,0,525,526,5,110,0,0,526,527,5,116,0,0,527,528,5,58,0,0,528,
        529,5,58,0,0,529,122,1,0,0,0,530,536,3,125,62,0,531,536,3,127,63,
        0,532,536,3,129,64,0,533,536,3,131,65,0,534,536,3,133,66,0,535,530,
        1,0,0,0,535,531,1,0,0,0,535,532,1,0,0,0,535,533,1,0,0,0,535,534,
        1,0,0,0,536,124,1,0,0,0,537,538,5,105,0,0,538,539,5,110,0,0,539,
        540,5,116,0,0,540,126,1,0,0,0,541,542,5,102,0,0,542,543,5,108,0,
        0,543,544,5,111,0,0,544,545,5,97,0,0,545,546,5,116,0,0,546,128,1,
        0,0,0,547,548,5,115,0,0,548,549,5,116,0,0,549,550,5,114,0,0,550,
        551,5,105,0,0,551,552,5,110,0,0,552,553,5,103,0,0,553,130,1,0,0,
        0,554,555,5,98,0,0,555,556,5,111,0,0,556,557,5,111,0,0,557,558,5,
        108,0,0,558,559,5,101,0,0,559,560,5,97,0,0,560,561,5,110,0,0,561,
        132,1,0,0,0,562,563,5,118,0,0,563,564,5,111,0,0,564,565,5,105,0,
        0,565,566,5,100,0,0,566,134,1,0,0,0,567,571,7,6,0,0,568,570,7,7,
        0,0,569,568,1,0,0,0,570,573,1,0,0,0,571,569,1,0,0,0,571,572,1,0,
        0,0,572,136,1,0,0,0,573,571,1,0,0,0,24,0,305,307,314,316,320,328,
        333,339,350,355,365,376,414,429,454,479,489,500,507,513,519,535,
        571,1,6,0,0
    ]

class PseudoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    STRING = 37
    NUMBER = 38
    DOUBLE = 39
    BOOL = 40
    WS = 41
    SINGLE_LINE_COMMENT = 42
    MULTI_LINE_COMMENT = 43
    PLUS = 44
    MINUS = 45
    MULT = 46
    DIV = 47
    INTDIV = 48
    INCREMENT = 49
    DECREMENT = 50
    GREATER = 51
    SMALLER = 52
    GREATEREQUAL = 53
    SMALLEREQUAL = 54
    EQUAL = 55
    DIFFERENT = 56
    AND = 57
    OR = 58
    NOT = 59
    PARENT = 60
    TYPE = 61
    TYPE_INT = 62
    TYPE_FLOAT = 63
    TYPE_STRING = 64
    TYPE_BOOL = 65
    TYPE_VOID = 66
    ID = 67

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'print'", "'shout'", "'('", "')'", "'='", "'is'", "'<<'", 
            "'<-'", "'if'", "':'", "'then'", "'elseif'", "'else'", "'end'", 
            "'while'", "'loop'", "'for'", "'break'", "'exit'", "'continue'", 
            "'next'", "'function'", "'fun'", "'def'", "'->'", "'return'", 
            "','", "'{'", "'}'", "'begin'", "'block'", "'global'", "'input'", 
            "'scan'", "'listen'", "'+'", "'-'", "'*'", "'/'", "'/#'", "'++'", 
            "'--'", "'parent::'", "'int'", "'float'", "'string'", "'boolean'", 
            "'void'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "DOUBLE", "BOOL", "WS", "SINGLE_LINE_COMMENT", 
            "MULTI_LINE_COMMENT", "PLUS", "MINUS", "MULT", "DIV", "INTDIV", 
            "INCREMENT", "DECREMENT", "GREATER", "SMALLER", "GREATEREQUAL", 
            "SMALLEREQUAL", "EQUAL", "DIFFERENT", "AND", "OR", "NOT", "PARENT", 
            "TYPE", "TYPE_INT", "TYPE_FLOAT", "TYPE_STRING", "TYPE_BOOL", 
            "TYPE_VOID", "ID" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "STRING", "ESC", "NUMBER", 
                  "DOUBLE", "BOOL", "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", 
                  "PLUS", "MINUS", "MULT", "DIV", "INTDIV", "INCREMENT", 
                  "DECREMENT", "GREATER", "SMALLER", "GREATEREQUAL", "SMALLEREQUAL", 
                  "EQUAL", "DIFFERENT", "AND", "OR", "NOT", "PARENT", "TYPE", 
                  "TYPE_INT", "TYPE_FLOAT", "TYPE_STRING", "TYPE_BOOL", 
                  "TYPE_VOID", "ID" ]

    grammarFileName = "Pseudo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


